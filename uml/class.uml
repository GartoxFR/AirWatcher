@startuml

' class Date{
'     -Année: int
'     -Mois: int
'     -Jour: int
'     -Heure: int
'     -Minute: int
'     -Seconde: int
' }

class Sensor {
    - sensorID: string
    -latitude: double
    -longitude: double
    -measurements: set<Measurements*>  

    + Sensor()
    + GetSensorId(): string&
    + GetLatitude(): double
    + GetLongitude(): double
    + GetMeasurements(): set<Measurements*>&
    + GetMeasurementsInPeriod(): vector<Measurements*>
}

class Measurement {
    - timestamp: time_t
    - values: MeasurementValues

    + Measurement(time_t, MeasurementValues)
    + GetTimestamp(): time_t
    + GetValues(): MeasurementValues

}

class MeasurementValues {
    - o3: double
    - so2: double
    - no2: double
    - pm10: double

    + MeasurementValues(double, double, double, double)

    + ComputeQualityIndex(): int

    + GetO3(): double

    + GetSO2(): double
    + GetNO2(): double
    + GetPM10(): double

    + operator+(MeasurementValues): MeasurementValues
    + operator+=(MeasurementValues)

    + operator-(MeasurementValues): MeasurementValues
    + operator-=(MeasurementValues)

    + operator/(MeasurementValues): MeasurementValues
    + operator/=(MeasurementValues)

    + operator*(MeasurementValues): MeasurementValues
    + operator*=(MeasurementValues)
}

class Attribute {
  -AttributeID: string
  -Unit: string
  -Description: string
  +Attribute()
}

class Provider {
  -ProviderID: string
  -CleanerID: string
  +Provider()
}

class Cleaner {
    -CleanerID: string
    -latitude: double
    -longitude: double
    -start: Date
    -end: Date
    +Cleaner()
}

class User {
    -UserID: string
    -SensorID: string
    +User()
}

class Calculus {
    +CalculQualiteAir(Measurement[4] mesures) : int
    +CalculQualiteAirZone(double latitude, double longitude, double rayon) : int
    +CalculSimilarité(string SensorID, date start, date end) : vector<Sensor>
    +CalculImpactNettoyeur(string CleanerID) : double
    +CalculFiabilité(string SensorID) : double
}

class Dataset {
  -Sensors: map<string,Sensor>
  -Measurements: vector<Measurement>
  -Attributes: map<string,Attribute>
  -Providers: map<string,Provider>
  -Cleaners: map<string,Cleaner>
  -Users: map<string,User>
  +{static} ImportFromCSV(string Directory) : Dataset
}

' Dataset <-- Sensor
' Dataset <-- Measurement
' Dataset <-- Attribute
' Dataset <-- Provider
' Dataset <-- Cleaner
' Dataset <-- User
@enduml
